// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SUPAVISOR_NATIVE.Tenants.Inputs
{

    public sealed class TenantPropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowList")]
        private InputList<string>? _allowList;

        /// <summary>
        /// List of CIDR addresses
        /// </summary>
        public InputList<string> AllowList
        {
            get => _allowList ?? (_allowList = new InputList<string>());
            set => _allowList = value;
        }

        /// <summary>
        /// SELECT rolname, rolpassword FROM pg_authid WHERE rolname=$1
        /// </summary>
        [Input("authQuery")]
        public Input<string>? AuthQuery { get; set; }

        /// <summary>
        /// Database name
        /// </summary>
        [Input("dbDatabase", required: true)]
        public Input<string> DbDatabase { get; set; } = null!;

        /// <summary>
        /// Database host
        /// </summary>
        [Input("dbHost", required: true)]
        public Input<string> DbHost { get; set; } = null!;

        /// <summary>
        /// Database port
        /// </summary>
        [Input("dbPort", required: true)]
        public Input<int> DbPort { get; set; } = null!;

        [Input("enforceSsl")]
        public Input<bool>? EnforceSsl { get; set; }

        /// <summary>
        /// External ID
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("insertedAt")]
        public Input<string>? InsertedAt { get; set; }

        /// <summary>
        /// auto
        /// </summary>
        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        [Input("requireUser", required: true)]
        public Input<bool> RequireUser { get; set; } = null!;

        /// <summary>
        /// your.domain.com
        /// </summary>
        [Input("sniHostname")]
        public Input<string>? SniHostname { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        [Input("upstreamSsl")]
        public Input<bool>? UpstreamSsl { get; set; }

        /// <summary>
        /// none
        /// </summary>
        [Input("upstreamVerify")]
        public Input<string>? UpstreamVerify { get; set; }

        [Input("users", required: true)]
        private InputList<Inputs.UserArgs>? _users;
        public InputList<Inputs.UserArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.UserArgs>());
            set => _users = value;
        }

        public TenantPropertiesArgs()
        {
            EnforceSsl = false;
            RequireUser = false;
            UpstreamSsl = true;
        }
        public static new TenantPropertiesArgs Empty => new TenantPropertiesArgs();
    }
}
