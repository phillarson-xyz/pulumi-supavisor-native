// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SUPAVISOR_NATIVE.Tenants.Inputs
{

    public sealed class UserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Database password
        /// </summary>
        [Input("dbPassword", required: true)]
        public Input<string> DbPassword { get; set; } = null!;

        /// <summary>
        /// Database user
        /// </summary>
        [Input("dbUser", required: true)]
        public Input<string> DbUser { get; set; } = null!;

        /// <summary>
        /// Database user alias
        /// </summary>
        [Input("dbUserAlias")]
        public Input<string>? DbUserAlias { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("insertedAt")]
        public Input<string>? InsertedAt { get; set; }

        /// <summary>
        /// The users who can be used for internal needs
        /// </summary>
        [Input("isManager")]
        public Input<bool>? IsManager { get; set; }

        /// <summary>
        /// Max clients count
        /// </summary>
        [Input("maxClients")]
        public Input<int>? MaxClients { get; set; }

        /// <summary>
        /// Pooling mode type
        /// </summary>
        [Input("modeType")]
        public Input<string>? ModeType { get; set; }

        /// <summary>
        /// Pool checkout timeout
        /// </summary>
        [Input("poolCheckoutTimeout")]
        public Input<int>? PoolCheckoutTimeout { get; set; }

        /// <summary>
        /// Pool size
        /// </summary>
        [Input("poolSize", required: true)]
        public Input<int> PoolSize { get; set; } = null!;

        /// <summary>
        /// External Tenant ID
        /// </summary>
        [Input("tenantExternalId")]
        public Input<string>? TenantExternalId { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public UserArgs()
        {
        }
        public static new UserArgs Empty => new UserArgs();
    }
}
